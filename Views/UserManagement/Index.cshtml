@model List<BlackBook_System.Models.UserViewModel>

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1><i class="fas fa-users-cog"></i> Page Setup</h1>
        <div>
            <a asp-action="UserRoles" class="btn btn-info me-2">
                <i class="fas fa-user-tag"></i> Manage User Roles
            </a>
            <a href="javascript:void(0)" onclick="loadPage('UserManagement', 'Create')" class="btn btn-primary">
                <i class="fas fa-plus"></i> Create New User
            </a>
        </div>
    </div>

    @if (TempData["SuccessMessage"] is string successMessage)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle"></i> @successMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] is string errorMessage)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle"></i> @errorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Username</th>
                            <th>Email</th>
                            <th>Roles</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr>
                                <td>@user.UserName</td>
                                <td>@user.Email</td>
                                <td>
                                    @foreach (var role in user.Roles)
                                    {
                                        <span class="badge bg-primary me-1">@role</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a href="@Url.Action("EditUserRoles", new { userId = user.Id })" 
                                           class="btn btn-primary btn-sm me-2">
                                            <i class="fas fa-user-edit"></i> Edit Roles
                                        </a>
                                        <form asp-action="Delete" asp-route-id="@user.Id" method="post"
                                              onsubmit="return confirm('Are you sure you want to delete this user?');"
                                              style="display: inline;">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-danger btn-sm">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showAlert(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
            alertDiv.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check' : 'exclamation'}-circle"></i>
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;

            const container = document.querySelector('.container-fluid');
            const existingAlert = container.querySelector('.alert');
            if (existingAlert) {
                existingAlert.remove();
            }

            container.insertBefore(alertDiv, document.querySelector('.card'));

            setTimeout(() => {
                alertDiv.remove();
            }, 3000);
        }
    </script>
}
